# Error messages for Datalift core classes
# ============================================================================
#
configuration.not.found		= Configuration file {0} not found
configuration.missing.property	= Missing configuration property {0}
configuration.load.error	= Failed to load Datalift configuration: {0}
#
resource.init.error		= Failed to initialize resource {0}: {1}
resource.shutdown.error		= Failed to shutdown resource {0}: {1}
service.load.error		= \
	Failed to load implementation of {0}: {1}, from {2}
module.load.error		= Failed to load module from {0}: {1}
#
repository.invalid.url		= Invalid URL ({1}) for repository "{0}"
repository.missing.name		= \
	Name is required for publishing RDF store "{0}"
repository.unknown.type		= \
	Unrecognized type or RDF store unreachable for repository "{0}" ({1})
repository.config.error		= \
	Invalid configuration for repository "{0}" ({1}): {2}
repository.connect.error	= \
	Failed to connect to repository "{0}" ({1}): {2}
#
repository.default.missing	= \
	No default (public) repository defined in configuration.
#
local.path.creation.failed	= Failed to create directory {0}
local.path.not.directory	= \
	Local path ({0}) is not a directory or does not exist
local.paths.not.directories	= \
	None of the configured paths ({0}) exists or is accessible
public.storage.not.directory	= \
	Public file storage ({0}) is not a directory or does not exist
#
no.matching.file.store          = \
        No filestore implementation found for "{1}" (property: {0})
#
duplicate.project.uri		= \
	Duplicate project identifier: {0}. \
	Please try with a different name for project "{1}".
duplicate.source.uri		= \
	Duplicate source identifier ({0}) in project "{2}". \
	Please try with a different name for source "{1}".
#
invalid.file.type		= Invalid file {0}: not a file nor a directory
file.not.found			= File not found: {0}
file.read.error			= Error accessing source file: {0} ({1})
#
invalid.jdbc.url		= Invalid JDBC URL: {0}
jdbc.driver.not.found		= JDBC driver not found or unknown for "{0}"
#
rdf.store.access.error		= \
	Unexpected error encountered while accessing the RDF store
duplicate.identifier		= \
	An object with the same identifier ("{0}") already exists
inconsistent.object.class	= Object "{0}" is not an instance of {1}
#
invalid.endpoint.url		= Invalid SPARQL endpoint URL: {0}
endpoint.access.error		= \
	Error accessing SPARQL endpoint ({0}): HTTP status={1}, response={2}
endpoint.response.error		= \
	Invalid RDF data received from SPARQL endpoint: {0}
rdf.parse.error			= Failed to parse RDF data: {0}
#
