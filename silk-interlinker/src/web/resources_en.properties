# English textual content for the Silk Interlinker module.
# ============================================================================
# Principal textual content.
silk-interlinker.title                  = Silk Interlinker
silk-interlinker.button                 = Silk Interlinker
silk-interlinker.description            = Silk is a linked data tool which helps discover relationship between objects from different datasets. Data publishers can use Silk to create RDF links from their data sources to other data sources on the Web of data. 
silk-interlinker.silk.description       = The Silk configuration scripts built with this interface are limited to creating owl:sameAs links in a new Datalift source, however, Silk is not limited to this use case and it remains possible to execute a script created outside of Datalift on Datalift's datasets. It is also possible to export a script created with this interface for later use.

#
# ============================================================================
# Generic labels.
page.lang       						= en
next.label 								= Next
previous.label  						= Prev
finish.label  							= Finish
add.label 								= Add
property.label 							= Property
submit.label                            = Submit
#
field.mandatory             = Required
field.optional              = Optional
field.none                  = None
#
warning.label               = Warning
# ============================================================================
# New configuration
new.wizard.reference.title                = Target dataset
new.wizard.creation.title                = Source dataset
new.wizard.settings.title			   = Interlinking Settings
new.wizard.script.title 				   = Silk Script
#
dataset.address.label       	= Dataset identifier
dataset.address.help        	= This Datalift dataset will be explored by Silk according to your configuration, its data will be matched to the other dataset's data.
dataset.type.local.label    	= Local
dataset.type.remote.label   	= Remote
dataset.origin.label 			= Origin
dataset.origin.local.option  	= Local
dataset.origin.remote.option 	= Remote 
dataset.origin.local.label  	= Select the source from the current project to interlink
dataset.origin.remote.label 	= Enter the URL of a remote SPARQL endpoint
dataset.remote.placeholder      = Example: http://dbpedia.org/sparql
dataset.refining-query.label = Refining query
dataset.refining-query.placeholder = Optional - This parameter is used to restrain Silk&#39s target data by defining filtering critera. We might want to explore only one class, filter data according to their value, or only work on a specific list of subjects. The refining critera must be expressed in SPARQL.
dataset.parameters.error.title  = Warning!
dataset.parameters.error.message = Please check if you correctly selected every required parameter to perform interlinking
dataset.parameters.dataset.warning.message = The target url or the source name entered have already been taken. Please change them.
dataset.property.help       = Values associated with this predicate will be used by Silk to match data. A transformation can be used to modify the original values, and the distance measure will be choosen later.
dataset.destination.label = Linkset information
dataset.destination.help = Set where you want to save the new dataset obtained by the interlinking
dataset.new.name.label = Name of the new source
dataset.new.url.label = Named Graph Uri
#
comparison.label                = Comparison Settings
comparison.placeholder			= Example: http://www.w3.org/2000/01/rdf-schema#label
comparison.help                 = Set the settings that will be used to better compare the datasources, to improve the interlinking
comparison.threshold.label		= Threshold
comparison.weight.label 		= Weight
comparison.distance-measure.label =  Distance measure
comparison.source.label = Source property:
comparison.target.label = Target property:
# Distance measures.
metric.title                        = Comparison parameters
metric.title.main                   = Choosing a suitable distance measure is crucial for the success of an interlinking.
metric.title.info                   = Character-based distance measure are well suited for handling typographical errors, token-based ones are better when comparing groups of words. The threshold is the maximum difference to tolerate between the values.
#
metric.title.levenshteinDistance    = Levenshtein
metric.title.levenshtein            = Normalized Levenshtein
metric.title.jaro                   = Jaro
metric.title.jaroWinkler            = Jaro-Winkler
metric.title.equality               = Equality
metric.title.inequality             = Inequality
metric.title.jaccard                = Jaccard
metric.title.dice                   = Dice
metric.title.softjaccard            = Soft Jaccard 
metric.title.num                    = Numeric (Enter min and max)
metric.title.date                   = Date - in days
metric.title.dateTime               = DateTime - in seconds
metric.title.wgs84                  = WGS84 (Enter unit and curve)
#
metric.info.levenshteinDistance     = The minimum number of edits needed to transform one string into the other, with the allowable edit operations being insertion, deletion, or substitution of a single character 
metric.info.levenshtein             = The minimum number of edits needed to transform one string into the other, with the allowable edit operations being insertion, deletion, or substitution of a single character  Normalized.
metric.info.jaro                    = Simple distance metric originally developed to compare person names. Normalized.
metric.info.jaroWinkler             = Measure designed and best suited for short strings such as person names. Normalized.
metric.info.equality                = 0 if strings are equal, 1 otherwise. Normalized.
metric.info.inequality              = 1 if strings are equal, 0 otherwise. Normalized.
metric.info.jaccard                 = Defined as the size of the intersection of the two strings divided by the size of the union of the strings. Normalized.
metric.info.dice                    = This coefficient is equal to two times the sizes of the strings' common characters (intersect) divided by the sum of their sizes. Normalized.
metric.info.softjaccard             = Defined as the size of the intersection of the two strings divided by the size of the union of the strings. Values within an levenhstein distance of ‘maxDistance’ are considered equivalent. Normalized.
metric.info.num                     = Numeric difference between two numbers parameters : minValue, maxValue, the minimum and maximum values which occur in the datasource.
metric.info.date                    = Computes the distance between two dates (“YYYY-MM-DD” format). Returns the difference in days.
metric.info.dateTime                = Computes the distance between two date time values (xsd:dateTime format). Returns the difference in seconds.
metric.info.wgs84                   = Computes the geographical distance between two points. Requires the distance unit (meters, kilometers) and the curve style (linear, logistic).
#
compare.title               = Comparison
compare.measure.title       = Distance measure
compare.measure.first       = Between strings - By characters
compare.measure.secund      = Between strings - By tokens
compare.measure.third       = Between numbers, dates, coordinates
#
# ============================================================================
# Transformation functions.
function.title.lowerCase            = Convert all to lower case
function.title.upperCase            = Convert all to upper case
function.title.capitalizeFirst      = First word's first letter in upper case
function.title.capitalizeAll        = Each word's first letter in upper case
function.title.removeBlanks         = Strip all whitespaces
function.title.removeSpecialChars   = Strip all special characters (punctuation included)
function.title.alphaReduce          = Strip all non-alphabetic characters
function.title.numReduce            = Strip all non-numeric characters
function.title.stem                 = Apply word stemming - Only keep the stem
function.title.stripPrefix          = Strip the prefix
function.title.stripPostfix         = Strip the postfix
function.title.stripUriPrefix       = Strip the URI prefix / base, e.g http://dbpedia.org/resource/
function.title.replace              = Search and replace - Enter both strings
function.title.regexReplace         = Search and replace - Enter regexp and new string
function.title.tokenize             = Split the string into tokens - Enter the regexp / separator
function.title.removeValues         = Removes specific values - Enter stop words
function.title.convertUTFISO        = Convert from UTF-8 to ISO-8859-1
function.title.convertISOUTF        = Convert from ISO-8859-1 to UTF-8
function.title.commonLogarithm      = Common (10) logarithm
function.title.naturalLogarithm     = Natural (e) logarithm
function.title.binaryLogarithm      = Binary (2) logarithm
#
field.label.regexpToken             = Separation regexp
field.example.regexpToken           = Cut at every hyphen, dot, slashes \\- , \\. , \\\\|\\/
field.info.regexpToken              = The regexp to separate the strings into tokens with
#
field.label.stopWords               = Strings to filter
field.example.stopWords             = from, and, or, where, that, the, it
field.info.stopWords                = Stop words to filter, separated by commas
#
field.label.search                  = Search
field.info.search                   = The string / regexp to look for in the data
#
field.label.replace                 = Replace
field.info.replace                  = The substitute string
#
transform.title             = Transformation
transform.info              = Transformation function for the data to be matched
transform.help              = In order for the comparison to work properly, the data has to be in the same format. For example, words must have the same case, dates must use the same format, encoding must be identical. For some transformations, additional parameters are required to complete the configuration.
transform.function.first    = Changing case
transform.function.secund   = Filtering characters
transform.function.third    = Deleting strings
transform.function.fourth   = Searching and replacing strings
transform.function.fifth    = Changing character encoding
transform.function.sixth    = Numerical transformations
#
# ============================================================================
# Aggergation methods.
aggregation.title                   = Aggregation method
aggregation.help                    = Choosing an aggregation method is mandatory when using multiple comparisons in order to combine their results.
aggregation.average                 = Average
aggregation.average.info            = Evaluate to the (weighted) average of confidence values
aggregation.max                     = Maximum
aggregation.min                     = Minimum
aggregation.maxmin.info             = Evaluate to the highest / lowest confidence in the group
aggregation.quadraticMean           = Quadratic mean
aggregation.quadraticMean.info      = Apply Euclidian distance (weighted)
aggregation.geometricMean           = Geometric mean
aggregation.geometricMean.info      = Compute the (weighted) geometric mean
#
compare.num.min             = Minimum
compare.num.max             = Maximum
#
compare.geo.unit            = Distance unit
compare.geo.meters          = Meters
compare.geo.kilometers      = Kilometers
#
compare.curve.unit          = Curve type
compare.curve.linear        = Linear
compare.curve.logistic      = Logistic
#
script.run.label = Run
script.save.label = Save
script.upload.label = Select file
script.upload.format.label = Format
script.upload.format.silk.label = Silk
script.upload.format.edoal.label = Edoal
script.upload.silk.identifier = Indentifier
script.upload.edoal.source.label = Source Dataset
script.upload.edoal.taget.label = Target Dataset
#
interlink.file.warning           = To be available from Datalift, the interlinking submitted to Datalift must at least contain the following output:
