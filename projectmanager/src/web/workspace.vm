<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
#load("project/resources")
#load_core_resources
	<title>#i18n("workspace.title") - DataLift</title>
#css_links
</head>
<body>
#banner
	<div id="main-menu" style="position:absolute;top:15px;right:15px;">
#foreach( $m in $mainMenu )
#set( $entryUrl = $m.getUrl(${baseUri}) )
#if( $m.method.name() == "GET" )
		<a href="${entryUrl}" class="button">${m.label}</a>
#else
		<form method="post" action="${entryUrl}"><input type="submit" class="button" value="${m.label}"/></form>
#end
#end
	</div>

<div id="workspace" class="ui-widget-content">
#if( $current )
	<h3 class="ui-widget-header dl-widget-header">#i18n("project") $!esc.html($current.title)</h3>
#else
	<h3 class="ui-widget-header dl-widget-header">#i18n("workspace.title")</h3>
#end

	<!-- <div id="workspace-main-panel" class="ui-widget-content"> -->
	<div class="ui-widget-content dl-main-panel">
#if( $current )
		<div id="tabs" style="margin:0;">
			<ul>
				<li><a onclick="historyPush('${current.uri}#description');" href="#description">#i18n("project.title.description")</a></li>
				<li><a onclick="historyPush('${current.uri}#source');" href="#source">#i18n("project.title.sources")</a></li>
				<li><a onclick="historyPush('${current.uri}#ontology');" href="#ontology">#i18n("project.title.ontology")</a></li>
			</ul>

			<div id="description"><p>
				#i18n("project.description"): $!esc.html($current.description)<br />
				#i18n("project.license"): <a href="$!current.getLicense()">$!esc.html($license)</a><br />
				#i18n("project.modification_s") $!date.format("medium", $current.modificationDate)<br />
				#i18n("project.creation_s") $!date.format("medium", $current.creationDate) #i18n("project.owner_s") $!esc.html($current.owner)</p>
#if( !${canHandle.isEmpty()} )
				<div id="module_can_handle">
					<p>#i18n("project.module_available")</p>
					<ol id="selectable_module">
#foreach( $page in $canHandle )
#set( $pageUrl = $page.getUrl(${baseUri}) )
#if( $page.method.name() == "GET" )
						<li><a href="${pageUrl}" class="button projectmodule_button">${page.label}</a></li>
#else
						<li><form method="post" action="${pageUrl}"><input type="submit" class="projectmodule_button" value="${page.label}"/></form></li>
#end
#end
					</ol>
				</div>
#end
				<p><br /></p>
				<form method="post" action="${current.uri}?_method=DELETE" class="form_formated">
					<a href="${current.uri}/modify" class="button">#i18n("modify")</a>
					<div style="display:none;">
						<div id="dialog-confirm"><p>#i18n("source.dialog.dialog_box.source_text")</p></div>
					</div>
					<input type="submit" id="delete" value="#i18n("delete")"/>
				</form>
			</div>

			<div id="source">
				<form class="grid_form">	
<div id="topButtons" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only">
<div id="pg_selectable_sources_toolbar" class="ui-pager-control" role="group">
	<table cellspacing="0" cellpadding="0" border="0" class="ui-pg-table" style="width:100%;table-layout:fixed;height:100%;" role="row">
		<tbody>
			<tr>
				<td id="selectable_sources_toolbar_left" align="left">
					<table cellspacing="0" cellpadding="0" border="0" class="ui-pg-table navtable" style="float:left;table-layout:auto;">
						<tbody>
							<tr>
								<td class="ui-pg-button ui-corner-all" title="#i18n("source.add")">
									<div class="ui-pg-div">
										<span class="ui-icon ui-icon-plus" id="srcAdd"></span>
									</div>
								</td>
								<td class="ui-pg-button ui-corner-all" title="#i18n("source.edit")">
									<div class="ui-pg-div">
										<span class="ui-icon ui-icon-pencil" id="srcEdt"></span>
									</div>
								</td>
								<td class="ui-pg-button ui-corner-all" title="#i18n("source.del")">
									<div class="ui-pg-div">
										<span class="ui-icon ui-icon-trash" id="srcRmv"></span>
									</div>
								</td>
								<td class="ui-pg-button ui-corner-all" title="Copy source">
									<div class="ui-pg-div">
										<span class="ui-icon ui-icon-copy" id="srcCpy"></span>
									</div>
								</td>
							</tr>
						</tbody>
					</table>
				</td>
			</tr>
		</tbody>
	</table>
</div>
</div>
					<table id="selectable_sources">
						<tr><td/></tr>
					</table>
					<div id="selectable_sources_toolbar"></div>
				</form>
			</div>

			<div id="ontology">
				<form class="grid_form">
					<table id="selectable_ontologies">
						<tr><td/></tr>
					</table>
					<div id="selectable_ontologies_toolbar"></div>
				</form>
			</div>
		</div>
#else
		<p style='text-align:center'>
			#i18n("welcome")
		</p>
#end
	</div>
</div>
#footer

#script_links
<script type="text/javascript">
#if( $current )
	var currentProject = "$current.uri";
#end
	$(function() {
		$("#main-menu .button").button();
		$("input:submit, .button").button();
		$("#tabs").tabs();

		var currentForm;
		$("#delete").click(function() {
			$("#dialog-confirm").dialog({
				resizable: false,
				modal: true,
				autoOpen: false,
				title: "#i18n('source.dialog.dialog_box.title')",
				buttons: {
					'#i18n("source.dialog.confirmation_button")': function() {
						currentForm.submit();
						$(this).dialog('close');
					},
					'#i18n("source.dialog.cancel_button")': function() {
						$(this).dialog('close');
					}
				}
			});
			currentForm = $(this).closest('form');
			$("#dialog-confirm").text("#i18n("source.dialog.dialog_box.project_text")");
			$("#dialog-confirm").dialog('open');
			return false;
		});
		
		if (typeof(currentProject) != 'undefined') {
			makeFocus(currentProject);
			if (window.location.hash == "")
				History.replaceState(null, null, window.location.href + "#description");
		}

		$(window).bind('popstate', function() {
			if (typeof(currentProject) != 'undefined') {
				if (History.getHash() == "")
					$("#tabs").tabs('select', "#description");
				else {
					$("#tabs").tabs('select', "#"+History.getHash());
				}
			}
		});

		loadGridSources();
		loadGridOntologies();

		$(window).bind('resize', function() {
			$("#selectable_sources").setGridWidth($("#tabs").width() - 30);
			$("#selectable_ontologies").setGridWidth($("#tabs").width() - 30);
		}).trigger('resize');

		// $(".delete").click(function(e) {
			// e.preventDefault();
			// alert("test click");
		// });
	});

	function makeFocus(projectUrl) {
		var buttons = $(".dl-project-button");
		for (var i=0; i < buttons.length; i++) {
			if (buttons[i].href == projectUrl)
				$(buttons[i]).addClass("ui-state-focus");
			else
				$(buttons[i]).removeClass("ui-state-focus");
		}
	}

	function ajaxRequest(reqUrl) {
		jQuery.ajax({
			beforeSend: function(req) {
				req.setRequestHeader("Accept", "text/html");
			},
			url: reqUrl,
			type:"GET",
			success: successfulQuery,
			error: unsuccessfulQuery
		});
	}

	function successfulQuery(response) {
		$("#workspace-main-panel").empty();
		$("#workspace-main-panel").append(response);
	}

	function unsuccessfulQuery(XMLHttpRequest) {
		alert("An error occured when trying to get project description.");
	}

	function loadGridSources() {
		/* Sources */
		jQuery("#selectable_sources").jqGrid({
			datatype: "local",
			colNames:['#i18n("project.p_uri")','#i18n("project.p_title")','#i18n("project.p_type")','#i18n("project.p_others")'],
			colModel:[
				{name:'uri',   index:'uri',   sorttype:"text", width:10},
				{name:'title', index:'title', sorttype:"text", width:200},
				{name:'type',  index:'type',  sorttype:"text", width:100, align:'center'},
				{name:'infos', index:'infos', sorttype:"text", width:400} ],
			caption: "",
			rowNum:10, rowList:[10,20,30], pager: '#selectable_sources_toolbar',
			gridview: true,
			multiselect: true,
			multiboxonly: true,
			height: 500
		});

		var mydata = [
#foreach($curSrc in $current.getSources())
		{
			uri:   "$!esc.javascript($curSrc.uri)",
			type:  "$i18n.javascript($curSrc.type.label)",
			title: "<a href='$!esc.javascript($curSrc.uri)'>$curSrc.title</a>",
	#if( $curSrc.getType() == $field.CsvSource )
		#set( $sep = "csv.source.${curSrc.separator}.separator" )
			infos: "#if( $curSrc.description )#i18n('project.upload_source.description'): $!esc.javascript($curSrc.description)<br />#end#i18n('project.upload_source.file'): <a href='${baseUri}/$!esc.javascript(${curSrc.filePath})'>$!esc.javascript($curSrc.filePath)</a><br />#if( $curSrc.sourceUrl )#i18n('project.upload_source.src_url'): <a href='$!esc.javascript(${curSrc.sourceUrl})'>$!esc.javascript($curSrc.sourceUrl)</a><br />#end#i18n('project.source.csv.separator'): #i18n(${sep}),&nbsp;#i18n('project.source.csv.title.present'): #i18n("boolean.${curSrc.hasTitleRow()}")<br />#i18n('project.upload_source.created'): $!date.format('medium', $curSrc.creationDate)"
	#elseif( $curSrc.getType() == $field.RdfFileSource )
			infos: "#if( $curSrc.description )#i18n('project.upload_source.description'): $!esc.javascript($curSrc.description)<br />#end#i18n('project.upload_source.file'): <a href='${baseUri}/${curSrc.filePath}'>$!esc.javascript($curSrc.filePath)</a><br />#if( $curSrc.sourceUrl )#i18n('project.upload_source.src_url'): <a href='${curSrc.sourceUrl}'>$!esc.javascript($curSrc.sourceUrl)</a><br />#end#i18n('project.upload_rdf_format'): $!esc.javascript($curSrc.mimeType)<br />#i18n('project.upload_source.created'): $!date.format('medium', $curSrc.creationDate)"
	#elseif( $curSrc.getType() == $field.SqlQuerySource )
			infos: "#if( $curSrc.description )#i18n('project.upload_source.description'): $!esc.javascript($curSrc.description)<br />#end#i18n('project.upload_db.source_url'): $!esc.javascript($curSrc.connectionUrl)<br />#i18n('project.upload_source.cache_duration'): $!esc.javascript($curSrc.cacheDuration)<br />#i18n('project.upload_source.cache_update'): $!date.format('medium', $curSrc.lastCacheUpdate)"
	#elseif( $curSrc.getType() == $field.SqlDatabaseSource )
			infos: "#if( $curSrc.description )#i18n('project.upload_source.description'): $!esc.javascript($curSrc.description)<br />#end#i18n('project.upload_db.source_url'): $!esc.javascript($curSrc.connectionUrl)<br />#i18n('project.upload_source.tables_numb'): $!esc.javascript($curSrc.tableCount)"
	#elseif( $curSrc.getType() == $field.TransformedRdfSource )
			title: "<a href='${baseUri}/sparql/describe?uri=$esc.url(${curSrc.uri})&type=Graph&default-graph-uri=internal'>$esc.javascript($curSrc.title)</a>",
			infos: "#if( $curSrc.description )#i18n('project.upload_source.description'): $!esc.javascript($curSrc.description)<br />#end#i18n('project.upload_source.graph'): $!esc.javascript($curSrc.targetGraph.toString())<br />#i18n('project.upload_source.parent'): $!esc.javascript($curSrc.parent.title)<br />#i18n('project.upload_source.created'): $!date.format('medium', $curSrc.creationDate)"
	#elseif( $curSrc.getType() == $field.SparqlSource )
			infos: "#if( $curSrc.description )#i18n('project.upload_source.description'): $!esc.javascript($curSrc.description)<br />#end#i18n('project.upload_sparql.connection_url'): $!esc.javascript($curSrc.endpointUrl)<br />#i18n('project.upload_source.cache_duration'): $!esc.javascript($curSrc.cacheDuration)<br />#i18n('project.upload_source.cache_update'): $!date.format('medium', $curSrc.lastCacheUpdate)"
	#elseif( $curSrc.getType() == $field.XmlSource )
			title: "<a href='${baseUri}/${curSrc.filePath}'>$esc.javascript($curSrc.title)</a>",
			infos: "#if( $curSrc.description )#i18n('project.upload_source.description'): $!esc.javascript($curSrc.description)<br />#end#i18n('project.upload_source.file'): <a href='${baseUri}/${curSrc.filePath}'>$!esc.javascript($curSrc.filePath)</a><br />#if( $curSrc.sourceUrl )#i18n('project.upload_source.src_url'): <a href='${curSrc.sourceUrl}'>$!esc.javascript($curSrc.sourceUrl)</a><br />#end#i18n('project.upload_source.created'): $!date.format('medium', $curSrc.creationDate)"
	#elseif( $curSrc.getType() == $field.ShpSource )
			title: "<a href='${baseUri}/${curSrc.filePath}'>$esc.javascript($curSrc.title)</a>",
			infos: "#if( $curSrc.description )#i18n('project.upload_source.description'): $!esc.javascript($curSrc.description)<br />#end#i18n('project.upload_source.file'): $!esc.javascript($curSrc.filePath)<br />#i18n('project.upload_source.created'): $!date.format('medium', $curSrc.creationDate)"
	#elseif( $curSrc.getType() == $field.GmlSource )
			title: "<a href='${baseUri}/${curSrc.filePath}'>$esc.javascript($curSrc.title)</a>",
			infos: "#if( $curSrc.description )#i18n('project.upload_source.description'): $!esc.javascript($curSrc.description)<br />#end#i18n('project.upload_source.file'): $!esc.javascript($curSrc.filePath)<br />#i18n('project.upload_source.created'): $!date.format('medium', $curSrc.creationDate)"
	#elseif( $curSrc.getType() == $field.WfsSource )
			title: "<a href='$curSrc.getSourceUrl()'>$esc.javascript($curSrc.title)</a>",
			infos: "#if( $curSrc.description )#i18n('project.upload_source.description'): $!esc.javascript($curSrc.description)<br />#end#i18n('project.upload_source.service'): $!esc.javascript($curSrc.getSourceUrl())<br />#i18n('project.upload_source.wfs.version'): $!esc.javascript($curSrc.getVersion())<br />#i18n('project.upload_source.wfs.strategy'): $!esc.javascript($curSrc.getserverTypeStrategy()) - #i18n('project.upload_source.created'): $!date.format('medium', $curSrc.creationDate)"
	#elseif( $curSrc.getType() == $field.SosSource )
			title: "<a href='$curSrc.getSourceUrl()'>$esc.javascript($curSrc.title)</a>",
			infos: "#if( $curSrc.description )#i18n('project.upload_source.description'): $!esc.javascript($curSrc.description)<br />#end#i18n('project.upload_source.service'): $!esc.javascript($curSrc.getSourceUrl())<br />#i18n('project.upload_source.wfs.version'): $!esc.javascript($curSrc.getVersion())<br />- #i18n('project.upload_source.created'): $!date.format('medium', $curSrc.creationDate)"
	#end
		},
#end
		];

		for(var i=0;i<=mydata.length;i++) {
			jQuery("#selectable_sources").jqGrid('addRowData',i+1,mydata[i]);
		}

		jQuery("#selectable_sources").jqGrid('navGrid', '#selectable_sources_toolbar',
			{edit:false,add:false,del:false, refresh:false, search:false}).navButtonAdd(
			'#selectable_sources_toolbar',
			{
			caption:"",
			buttonicon:"ui-icon-plus",
			onClickButton:function(){
				window.location = currentProject + "/srcupload"
			}
		}).navButtonAdd(
			'#selectable_sources_toolbar',
			{
			caption:"",
			buttonicon:"ui-icon-pencil",
			onClickButton:function(){
				var id = jQuery("#selectable_sources").getGridParam('selrow');
				if (id) {
					var ids = jQuery("#selectable_sources").jqGrid('getGridParam','selarrrow');
					if (ids.length > 1) {
						alert("#i18n('source.dialog.dialog_box.error_text')");
						throw "#i18n('source.dialog.dialog_box.error_text')";
					}
					var ret = jQuery("#selectable_sources").getRowData(id);
					window.location = currentProject + "/source/modify?uri=" + encodeURIComponent(ret.uri);
				}
				else {
					alert('#i18n("project.msg.select_row")');
				}
			}
		}).navButtonAdd(
			'#selectable_sources_toolbar',
			{
			caption:"",
			buttonicon:"ui-icon-trash",
			onClickButton:function() {
				var grid = jQuery("#selectable_sources");
				var ids = grid.jqGrid('getGridParam','selarrrow');
				var uris = [];
				if (ids.length > 0) {
					$("#dialog-confirm").dialog({
						resizable: false,
						modal: true,
						autoOpen: true,
						title: "#i18n('source.dialog.dialog_box.title')",
						buttons: {
							'Yes': function() {
								$(this).dialog('close');
								for( var i=0; i < ids.length; i++) {
									var uri = jQuery("#selectable_sources").jqGrid("getCell", ids[i], "uri");
									uris.push(uri);
								}
								$.ajax({
									url: currentProject + "/source/delete",
									type: 'post',
									data: JSON.stringify(uris),
									contentType: 'application/json; charset=utf-8',
									dataType: 'json',
									async: false,
									success: function(response, status){
										location.reload(true);
									}
								});
							},
							'No': function() {
								$(this).dialog('close');
							}
						}
					});
				} else {
					alert('#i18n("project.msg.select_row")');
				}
			}
		}).navButtonAdd(
			'#selectable_sources_toolbar',
			{
			caption:"",
			buttonicon:"ui-icon-copy",
			onClickButton:function(){
				var id = jQuery("#selectable_sources").getGridParam('selrow');
				if (id) {
					var ids = jQuery("#selectable_sources").jqGrid('getGridParam','selarrrow');
					if (ids.length > 1) {
						alert("#i18n('source.dialog.dialog_box.error_text')");
						throw "#i18n('source.dialog.dialog_box.error_text')";
					}
					var ret = jQuery("#selectable_sources").getRowData(id);
					var prefixName = ret.uri.replace(currentProject + '/source/','');
					var prefixUri = ret.uri.replace(/-[0-9]{1,}/g, '');
					prefixUri = prefixUri.replace('/source','');
					prefixUri = prefixUri.replace('/project','');
					var prefix = "prefix " + prefixName + ": <" + prefixUri + "#>";
					var range = document.createRange();
					var selection = window.getSelection();
					range = selection.getRangeAt(0);
					range.insertNode( document.createTextNode(prefix) );
					console.log(range.toString());
					selection.removeAllRanges();
					selection.addRange(range);
					document.execCommand ("copy", false, null);
				}
				else {
					alert('#i18n("project.msg.select_row")');
				}
			}
		});

		jQuery("#selectable_sources").jqGrid('hideCol',["uri"]);
		$("#topButtons").width($("#tabs").width() - 30);
	}

	function loadGridOntologies() {
		/* Ontologies */
		jQuery("#selectable_ontologies").jqGrid({
			datatype: "local",
			colNames:['#i18n("project.p_uri")','#i18n("project.p_title")','#i18n("project.p_source")',"#i18n("project.p_dateSubmitted")", '#i18n("project.p_operator")'],
			colModel:[
				{name:'uri',index:'uri',sorttype:"text",editable:true,editoptions:{size:10}},
				{name:'title',index:'title',sorttype:"text",editable:true,editoptions:{size:50}},
				{name:'source',index:'source',sorttype:"text",editable:true,editoptions:{size:50}},
				{name:'dateSubmitted',index:'dateSubmitted',sorttype:"text",editable:true,editoptions:{size:50}},
				{name:'operator',index:'operator',sorttype:"text",editable:true,editoptions:{size:50}} ],
			caption: "",
			rowNum: 10,
			rowList: [10,20,30],
			pager: '#selectable_ontologies_toolbar',
			gridview: true,
			multiselect: true,
			multiboxonly: true,
			height: 500
		});

		var mydataOntology = [
#foreach( $curOnto in $current.getOntologies() )
		{
			uri:"$!esc.javascript($curOnto.uri)",
			title:"$!esc.javascript($curOnto.title)",
			source:"$!esc.javascript($curOnto.source)",
			dateSubmitted:"$!date.format('medium', $curOnto.dateSubmitted)",
			operator:"$!esc.javascript($curOnto.operator)"
		},
#end
		];
		for(var i=0; i<=mydataOntology.length; i++) {
			jQuery("#selectable_ontologies").jqGrid('addRowData',i+1,mydataOntology[i]);
		}
		jQuery("#selectable_ontologies")
			.jqGrid('navGrid', '#selectable_ontologies_toolbar',
				{ edit:false,add:false,del:false, refresh:false, search:false,
			}).navButtonAdd(
			'#selectable_ontologies_toolbar',
			{
				caption:"",
				buttonicon:"ui-icon-plus",
				onClickButton:function() {
					window.location = currentProject + "/ontologyupload"
				}
			}).navButtonAdd('#selectable_ontologies_toolbar',
				{caption:"",
				buttonicon:"ui-icon-pencil",
				onClickButton:function(){
					var id = jQuery("#selectable_ontologies").getGridParam('selrow');
					if(id){
						var ids = jQuery("#selectable_ontologies").jqGrid('getGridParam','selarrrow');
						if (ids.length > 1) {
							alert("#i18n('ontology.dialog.dialog_box.error_text')");
							throw "#i18n('ontology.dialog.dialog_box.error_text')";
						}
						var ret = jQuery("#selectable_ontologies").getRowData(id);
						window.location = currentProject + "/ontology/"+ret.title+"/modify";
					} else {
						alert('#i18n("project.msg.select_row")');
					}
				}
			}).navButtonAdd(
			'#selectable_ontologies_toolbar',
			{
			caption:"",
			buttonicon:"ui-icon-trash",
			onClickButton:function() {
				var grid = jQuery("#selectable_ontologies");
				var titles = [];
				var ids = grid.jqGrid('getGridParam','selarrrow');
				if (ids.length > 0) {
					for( var i=0; i < ids.length; i++) {
						var title = grid.jqGrid("getCell", ids[i], "title");
						titles.push(title);
					}
					$.ajax({
						url: currentProject + "/ontology/delete",
						type: 'post',
						data: JSON.stringify(titles),
						contentType: 'application/json; charset=utf-8',
						dataType: 'json',
						async: false,
						success: function(response, status){
							location.reload(true);
						}
					});
				} else {
					alert('#i18n("project.msg.select_row")');
				}
			}
		});
		jQuery("#selectable_ontologies").jqGrid('hideCol',["uri"]);
	}
	// Add listeners
	$("#srcAdd").click(function(){
		window.location = currentProject + "/srcupload";
	});
	$("#srcEdt").click(function(){
		// var gr = jQuery("#selectable_sources").jqGrid('getGridParam','selrow');
		// if( gr != null ) jQuery("#selectable_sources").jqGrid('editGridRow',gr,{height:500,reloadAfterSubmit:false});
		// else alert("Please Select Row");
		var id = jQuery("#selectable_sources").getGridParam('selrow');
		if (id) {
			var ids = jQuery("#selectable_sources").jqGrid('getGridParam','selarrrow');
			if (ids.length > 1) {
				alert("Please select one source.");
				throw "Please select one source.";
			}
			var ret = jQuery("#selectable_sources").getRowData(id);
			window.location = currentProject + "/source/modify?uri=" + encodeURIComponent(ret.uri);
		}
		else {
			alert('Please select a source');
		}
	});
	$("#srcRmv").click(function(){
		var grid = jQuery("#selectable_sources");
		var ids = grid.jqGrid('getGridParam','selarrrow');
		var uris = [];
		if (ids.length > 0) {
			$("#dialog-confirm").dialog({
				resizable: false,
				modal: true,
				autoOpen: true,
				title: "Confirmation",
				buttons: {
					'Yes': function() {
						$(this).dialog('close');
						for( var i=0; i < ids.length; i++) {
							var uri = jQuery("#selectable_sources").jqGrid("getCell", ids[i], "uri");
							uris.push(uri);
						}
						$.ajax({
							url: currentProject + "/source/delete",
							type: 'post',
							data: JSON.stringify(uris),
							contentType: 'application/json; charset=utf-8',
							dataType: 'json',
							async: false,
							success: function(response, status){
								location.reload(true);
							}
						});
					},
					'No': function() {
						$(this).dialog('close');
					}
				}
			});
		} else {
			alert('Please select a source');
		}
	});
</script>
</body>
</html>
